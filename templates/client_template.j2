import requests
from urllib.parse import urljoin
from pydantic import BaseModel
from . import models
from typing import List, Dict, Any, Optional, Union


class {{app_name}}Client:
    def __init__(self, base_url, credentials):
        self.base_url = base_url
        self.credentials = credentials
        self.session = requests.Session()
        self.session.headers.update({
            'Authorization': f'{{token_type}} {self.credentials}',
            'Content-Type': 'application/json'
        })

    def _request(self, method, endpoint, object_ctors, json=None, **kwargs):
        url = urljoin(self.base_url, endpoint)
        if json is not None:
            if type(json.__class__) == type(BaseModel):
                json = json.model_dump()
            kwargs['json'] = json
        response = self.session.request(method, url, **kwargs)
        object_ctor = object_ctors.get(response.status_code, dict)
        response.raise_for_status()
        data = response.json()
        if isinstance(data, list):
            return [object_ctor(**item) for item in data]
        return object_ctor(**data)
{% for method in methods %}
    def {{ method.name }}(self{% for param in method.params %}, {{ param }}{% endfor %}{% for param in method.query_params %}, {{param}}{% endfor %}{% for body in method.request_body %}, {{body.title}}: {{body.type}}{% endfor %}){% if 'return_type' in method %} -> {{method.return_type}}{% endif %}:
        """{{ method.description }}"""
        return self._request(
            '{{ method.http_method }}',
            {% if ('query_params' in method and method.query_params|length > 0) or ('params' in method and method.params|length > 0) %}f{% endif %}'{{ method.endpoint }}'{% if method.query_params %},
            params=dict({% for p in method.query_params %}{{p}}={{p}}{% if not loop.last %}, {% endif %}{% endfor %}){% endif %}{% if 'request_body' in method %},
            json={% for e in method.request_body %}{{e.title}}{% endfor %}{% endif %},
            object_ctors={{ method.return_ctor }}
        )
{% endfor %}
